// Compiled by ClojureScript 0.0-2173
goog.provide('playfair_cljs.shapeData');
goog.require('cljs.core');
goog.require('cljs.core.async');
goog.require('cljs.core.async');
goog.require('playfair_cljs.shapeDataConversion');
goog.require('playfair_cljs.shapeDataConversion');
playfair_cljs.shapeData.default_shape_visual = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"fill","fill",1017047285),"#1F1E1D",new cljs.core.Keyword(null,"style","style",1123684643),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"opacity","opacity",4041665405),0.6], null),new cljs.core.Keyword(null,"stroke","stroke",4416891306),"#1F1E1D",new cljs.core.Keyword(null,"strokeWidth","strokeWidth",2937970144),3], null);
playfair_cljs.shapeData.guide_shape_visual = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"stroke","stroke",4416891306),"#225E79",new cljs.core.Keyword(null,"fill","fill",1017047285),"#3BA3D0",new cljs.core.Keyword(null,"strokeWidth","strokeWidth",2937970144),2], null);
playfair_cljs.shapeData.regular_node_vis = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"stroke","stroke",4416891306),"#225E79",new cljs.core.Keyword(null,"fill","fill",1017047285),"gray",new cljs.core.Keyword(null,"strokeWidth","strokeWidth",2937970144),2], null);
playfair_cljs.shapeData.active_node_vis = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"stroke","stroke",4416891306),"#225E79",new cljs.core.Keyword(null,"fill","fill",1017047285),"blue",new cljs.core.Keyword(null,"strokeWidth","strokeWidth",2937970144),2], null);
playfair_cljs.shapeData.snap_node_vis = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"stroke","stroke",4416891306),"#225E79",new cljs.core.Keyword(null,"fill","fill",1017047285),"#FFD035",new cljs.core.Keyword(null,"strokeWidth","strokeWidth",2937970144),2], null);
playfair_cljs.shapeData.canvas_size = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [600,480], null);
playfair_cljs.shapeData.canvas_nodes = playfair_cljs.shapeDataConversion.get_rect_node_points.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"x","x",1013904362),0,new cljs.core.Keyword(null,"y","y",1013904363),0,new cljs.core.Keyword(null,"width","width",1127031096),playfair_cljs.shapeData.canvas_size.call(null,0),new cljs.core.Keyword(null,"height","height",4087841945),playfair_cljs.shapeData.canvas_size.call(null,1)], null));
playfair_cljs.shapeData.check_snap = (function check_snap(thing){var or__3441__auto__ = cljs.core._EQ_.call(null,thing,new cljs.core.Keyword(null,"canvas","canvas",3941165258));if(or__3441__auto__)
{return or__3441__auto__;
} else
{if((cljs.core.vector_QMARK_.call(null,thing)) && ((cljs.core.count.call(null,thing) > 0)))
{return cljs.core.some.call(null,(function (x){return cljs.core._EQ_.call(null,x,thing.call(null,0));
}),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"rect","rect",1017400662),new cljs.core.Keyword(null,"path","path",1017337751),new cljs.core.Keyword(null,"line","line",1017226086),new cljs.core.Keyword(null,"circle","circle",3948654658)], null));
} else
{return false;
}
}
});
playfair_cljs.shapeData.make_draw = (function() {
var make_draw = null;
var make_draw__3 = (function (shape_key,p__13294,p__13295){var vec__13302 = p__13294;var x = cljs.core.nth.call(null,vec__13302,0,null);var y = cljs.core.nth.call(null,vec__13302,1,null);var vec__13303 = p__13295;var diffX = cljs.core.nth.call(null,vec__13303,0,null);var diffY = cljs.core.nth.call(null,vec__13303,1,null);return make_draw.call(null,shape_key,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x,y], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [diffX,diffY], null),null);
});
var make_draw__4 = (function (shape_key,p__13296,p__13297,options_vec){var vec__13304 = p__13296;var x = cljs.core.nth.call(null,vec__13304,0,null);var y = cljs.core.nth.call(null,vec__13304,1,null);var vec__13305 = p__13297;var diffX = cljs.core.nth.call(null,vec__13305,0,null);var diffY = cljs.core.nth.call(null,vec__13305,1,null);return cljs.core.conj.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"step-name","step-name",2312562782),new cljs.core.Keyword(null,"draw","draw",1016996022),new cljs.core.Keyword(null,"shape","shape",1123304211),shape_key], null),cljs.core.zipmap.call(null,(cljs.core.truth_(playfair_cljs.shapeData.check_snap.call(null,y))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"from-node","from-node",1048241591),new cljs.core.Keyword(null,"from-shape","from-shape",2082768688)], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"x","x",1013904362),new cljs.core.Keyword(null,"y","y",1013904363)], null)),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x,y], null)),cljs.core.zipmap.call(null,(cljs.core.truth_(playfair_cljs.shapeData.check_snap.call(null,diffY))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"to-node","to-node",4107897222),new cljs.core.Keyword(null,"to-shape","to-shape",2442812737)], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"diffX","diffX",1109485669),new cljs.core.Keyword(null,"diffY","diffY",1109485670)], null)),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [diffX,diffY], null)),(cljs.core.truth_(options_vec)?cljs.core.zipmap.call(null,options_vec,cljs.core.repeat.call(null,cljs.core.count.call(null,options_vec),true)):null));
});
make_draw = function(shape_key,p__13296,p__13297,options_vec){
switch(arguments.length){
case 3:
return make_draw__3.call(this,shape_key,p__13296,p__13297);
case 4:
return make_draw__4.call(this,shape_key,p__13296,p__13297,options_vec);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_draw.cljs$core$IFn$_invoke$arity$3 = make_draw__3;
make_draw.cljs$core$IFn$_invoke$arity$4 = make_draw__4;
return make_draw;
})()
;
playfair_cljs.shapeData.make_scale = (function make_scale(shape_lookup,node,scale_val){return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"step-name","step-name",2312562782),new cljs.core.Keyword(null,"scale","scale",1123155132),new cljs.core.Keyword(null,"shape-lookup","shape-lookup",2731806872),shape_lookup,new cljs.core.Keyword(null,"node","node",1017291124),node,new cljs.core.Keyword(null,"scale-val","scale-val",3429794704),scale_val], null);
});
playfair_cljs.shapeData.make_for = (function make_for(times,steps_vec){return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"step-name","step-name",2312562782),new cljs.core.Keyword(null,"for","for",1014005819),new cljs.core.Keyword(null,"times","times",1124268728),times,new cljs.core.Keyword(null,"for-steps","for-steps",1009839253),steps_vec], null);
});
playfair_cljs.shapeData.make_rotate = (function make_rotate(shape_lookup,node,rotate_val){return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"step-name","step-name",2312562782),new cljs.core.Keyword(null,"rotate","rotate",4383690957),new cljs.core.Keyword(null,"shape-lookup","shape-lookup",2731806872),shape_lookup,new cljs.core.Keyword(null,"node","node",1017291124),node,new cljs.core.Keyword(null,"rotate-val","rotate-val",934012705),rotate_val], null);
});
playfair_cljs.shapeData.make_move = (function make_move(from_node,shape_lookup,diffX,diffY){return cljs.core.conj.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"step-name","step-name",2312562782),new cljs.core.Keyword(null,"move","move",1017261891),new cljs.core.Keyword(null,"from-node","from-node",1048241591),from_node,new cljs.core.Keyword(null,"shape-lookup","shape-lookup",2731806872),shape_lookup], null),cljs.core.zipmap.call(null,(cljs.core.truth_(playfair_cljs.shapeData.check_snap.call(null,diffY))?new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"from-node","from-node",1048241591)], null):new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"diffX","diffX",1109485669)], null)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [diffX], null)),(cljs.core.truth_(playfair_cljs.shapeData.check_snap.call(null,diffY))?new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"to-node","to-node",4107897222),diffY.call(null,0),new cljs.core.Keyword(null,"to-shape","to-shape",2442812737),diffY.call(null,1)], null):new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"diffY","diffY",1109485670),diffY], null)));
});
playfair_cljs.shapeData.make_path_start = (function make_path_start(x,y,options_vec,vis_attrs){return cljs.core.conj.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"step-name","step-name",2312562782),new cljs.core.Keyword(null,"path-start","path-start",761511980),new cljs.core.Keyword(null,"shape","shape",1123304211),new cljs.core.Keyword(null,"path","path",1017337751)], null),(cljs.core.truth_(playfair_cljs.shapeData.check_snap.call(null,y))?new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"from-node","from-node",1048241591),x,new cljs.core.Keyword(null,"from-shape","from-shape",2082768688),y], null):new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"x","x",1013904362),x,new cljs.core.Keyword(null,"y","y",1013904363),y], null)),(cljs.core.truth_(options_vec)?cljs.core.zipmap.call(null,options_vec,cljs.core.repeat.call(null,cljs.core.count.call(null,options_vec),true)):null),(cljs.core.truth_(vis_attrs)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"vis-attrs","vis-attrs",1159306279),vis_attrs], null):null));
});
playfair_cljs.shapeData.make_path_extend = (function make_path_extend(path_index,p_type,n_x,n_y){return cljs.core.conj.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"step-name","step-name",2312562782),new cljs.core.Keyword(null,"path-extend","path-extend",1383118132),new cljs.core.Keyword(null,"path-index","path-index",752100508),path_index,new cljs.core.Keyword(null,"p-type","p-type",4265503209),p_type], null),(cljs.core.truth_(playfair_cljs.shapeData.check_snap.call(null,n_y))?new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"to-shape","to-shape",2442812737),n_y,new cljs.core.Keyword(null,"to-node","to-node",4107897222),n_x], null):new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"x","x",1013904362),n_x,new cljs.core.Keyword(null,"y","y",1013904363),n_y], null)));
});
playfair_cljs.shapeData.line_point_func = (function line_point_func(x,y){var cross_size = 5;var point = playfair_cljs.shapeDataConversion.vector_to_nodes.call(null,new cljs.core.Keyword(null,"path","path",1017337751),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x,y], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0,0], null));var p_x = new cljs.core.Keyword(null,"x","x",1013904362).cljs$core$IFn$_invoke$arity$1(point.call(null,0));var p_y = new cljs.core.Keyword(null,"y","y",1013904363).cljs$core$IFn$_invoke$arity$1(point.call(null,0));return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"shape-name","shape-name",1699536041),"line",new cljs.core.Keyword(null,"position-attrs","position-attrs",2552349296),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"first-point","first-point",3184094117),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"x","x",1013904362),(p_x + cross_size),new cljs.core.Keyword(null,"y","y",1013904363),(p_y + cross_size)], null),new cljs.core.Keyword(null,"middle-point","middle-point",4048024266),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"x","x",1013904362),p_x,new cljs.core.Keyword(null,"y","y",1013904363),p_y], null),new cljs.core.Keyword(null,"last-point","last-point",1861953291),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"x","x",1013904362),(p_x - cross_size),new cljs.core.Keyword(null,"y","y",1013904363),(p_y - cross_size)], null)], null),new cljs.core.Keyword(null,"visual-attrs","visual-attrs",1512932167),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"stroke","stroke",4416891306),"blue",new cljs.core.Keyword(null,"strokeWidth","strokeWidth",2937970144),2], null),new cljs.core.Keyword(null,"active","active",3885920888),false], null),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"shape-name","shape-name",1699536041),"line",new cljs.core.Keyword(null,"position-attrs","position-attrs",2552349296),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"first-point","first-point",3184094117),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"x","x",1013904362),(p_x - cross_size),new cljs.core.Keyword(null,"y","y",1013904363),(p_y + cross_size)], null),new cljs.core.Keyword(null,"middle-point","middle-point",4048024266),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"x","x",1013904362),p_x,new cljs.core.Keyword(null,"y","y",1013904363),p_y], null),new cljs.core.Keyword(null,"last-point","last-point",1861953291),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"x","x",1013904362),(p_x + cross_size),new cljs.core.Keyword(null,"y","y",1013904363),(p_y - cross_size)], null)], null),new cljs.core.Keyword(null,"visual-attrs","visual-attrs",1512932167),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"stroke","stroke",4416891306),"blue",new cljs.core.Keyword(null,"strokeWidth","strokeWidth",2937970144),2], null),new cljs.core.Keyword(null,"active","active",3885920888),false], null)], null);
});

//# sourceMappingURL=shapeData.js.map